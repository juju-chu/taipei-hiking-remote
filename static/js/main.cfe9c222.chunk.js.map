{"version":3,"sources":["components/Header.js","components/Search.js","components/Path.js","components/Paths.js","components/Pagination.js","global/constants.js","Hiking.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["headerStyle","zIndex","width","Header","className","style","Navbar","href","searchStyle","padding","Search","setKeyword","useState","word","setWord","type","id","value","onChange","e","target","onClick","preventDefault","cardStyle","maxWidth","Path","name","district","description","show","setShow","handleClose","text","lines","ellipsis","button","moreText","lessText","innerElement","Modal","onHide","closeButton","Title","Body","Footer","Button","variant","Paths","pathList","map","path","_id","步道名稱","行政區","環境特色","Pagination","count","pathsPerPage","currentPage","setPage","handleClick","page","prevData","pageNumber","Math","floor","pageList","i","push","API_GET_DATA","Hiking","data","setData","setCount","keyword","useEffect","a","fetch","response","json","result","results","fetchPaths","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cfe9c222.chunk.js","sourcesContent":["import React from 'react'\nimport { Navbar } from './../../node_modules/react-bootstrap'\n\nconst headerStyle = {\n  zIndex: 1,\n  width: '100vw',\n}\n\nconst Header = () => {\n  return (\n    <div className=\"header position-fixed\" style={headerStyle}>\n      <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"/\">\n          台北市健行步道\n        </a>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState } from 'react'\n\nconst searchStyle = {\n  padding: '100px 0 0 24px',\n  width: '200px',\n}\n\nconst Search = ({ setKeyword }) => {\n  const [word, setWord] = useState('')\n  function keywordChange(e) {\n    setWord(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setKeyword(word)\n  }\n\n  return (\n    <div className=\"search\" style={searchStyle}>\n      <form>\n        <fieldset>\n          <div className=\"form-group\">\n            <label>行政區（例如：大安、士林...）</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"district\"\n              value={word}\n              onChange={keywordChange}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n          >\n            送出\n          </button>\n        </fieldset>\n      </form>\n    </div>\n  )\n}\n\nexport default Search\n","import React, { useState } from 'react'\nimport ClampLines from 'react-clamp-lines'\nimport { Modal, Button } from './../../node_modules/react-bootstrap'\n\nconst cardStyle = {\n  maxWidth: '15rem',\n}\n\nconst Path = ({ id, name, district, description }) => {\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <div className=\"path\">\n      <div className=\"card border-danger m-3\" style={cardStyle}>\n        <div className=\"card-header\">{district}</div>\n        <div className=\"card-body\" onClick={handleShow}>\n          <h4 className=\"card-title\">{name}</h4>\n          <ClampLines\n            text={description}\n            id=\"really-unique-id\"\n            lines={4}\n            ellipsis=\"...\"\n            button=\"false\"\n            moreText=\"顯示更多\"\n            lessText=\"顯示較少\"\n            className=\"custom-class\"\n            innerElement=\"p\"\n          />\n        </div>\n      </div>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{description}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            關閉\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\nexport default Path\n","import React from 'react'\nimport Path from './Path'\n\nconst Paths = ({ pathList }) => {\n  return (\n    <div className=\"pathList d-flex flex-wrap justify-content-center p-2\">\n      {pathList.map((path) => {\n        const { _id: id, 步道名稱, 行政區, 環境特色 } = path\n        return (\n          <Path\n            key={id}\n            id\n            name={步道名稱}\n            district={行政區}\n            description={環境特色}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Paths\n","import React from 'react'\n\nconst Pagination = ({ count, pathsPerPage, currentPage, setPage }) => {\n  const handleClick = (page) => {\n    return () => {\n      setPage(function (prevData) {\n        return page\n      })\n    }\n  }\n  const pageNumber = Math.floor(count / pathsPerPage)\n  let pageList = []\n  for (let i = 0; i <= pageNumber; i++) {\n    pageList.push(i)\n  }\n\n  return (\n    <div className=\"pagination d-flex justify-content-center\">\n      <div>\n        <ul className=\"pagination\">\n          <li className={'page-item' + (currentPage === 0 ? ' disabled' : '')}>\n            <button\n              className=\"page-link\"\n              onClick={handleClick(currentPage - 1)}\n            >\n              &laquo;\n            </button>\n          </li>\n\n          {pageList.map((page) => {\n            return (\n              <li\n                className={\n                  'page-item' + (page === currentPage ? ' active' : '')\n                }\n                key={page}\n              >\n                <button className=\"page-link\" onClick={handleClick(page)}>\n                  {page + 1}\n                </button>\n              </li>\n            )\n          })}\n\n          <li\n            className={\n              'page-item' + (currentPage < pageNumber ? '' : ' disabled')\n            }\n          >\n            <button\n              className=\"page-link\"\n              onClick={handleClick(currentPage + 1)}\n            >\n              &raquo;\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Pagination\n","const API_HOST =\n  'https://data.taipei/api/v1/dataset/1c6a4f3b-d8e9-4ee0-aed6-1ad9e2387ff5?scope=resourceAquire'\n\nexport const PATHS_PER_PAGE = 8\nexport const API_GET_DATA = `${API_HOST}&limit=${PATHS_PER_PAGE}`\n","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Search from './components/Search'\nimport Paths from './components/Paths'\nimport Pagination from './components/Pagination'\nimport { API_GET_DATA, PATHS_PER_PAGE } from './global/constants'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst Hiking = () => {\n  const [data, setData] = useState([])\n  const [page, setPage] = useState(0)\n  const [count, setCount] = useState(0)\n  const [keyword, setKeyword] = useState('')\n\n  useEffect(() => {\n    async function fetchPaths(setData) {\n      const response = await fetch(\n        `${API_GET_DATA}&offset=${page * PATHS_PER_PAGE}&q=${keyword}`\n      )\n      const data = await response.json()\n      setCount(data.result.count)\n      setData(data.result.results)\n    }\n\n    fetchPaths(setData)\n  }, [page, keyword])\n\n  return (\n    <>\n      <Header></Header>\n      <div className=\"container\">\n        <div className=\"search\">\n          <Search setKeyword={setKeyword} />\n        </div>\n        <Paths pathList={data}></Paths>\n        <Pagination\n          count={count}\n          pathsPerPage={PATHS_PER_PAGE}\n          currentPage={page}\n          setPage={setPage}\n        ></Pagination>\n      </div>\n    </>\n  )\n}\n\nexport default Hiking\n","import React from 'react'\nimport Hiking from './Hiking'\n\nfunction App() {\n  return <Hiking />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}